name: ci

on:
  push:
    tags:
    - 'v*'
  pull_request:

env:
  TEST_TAG: user/myapp:test

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Read IMAGE_NAME
        id: image_name
        uses: falti/dotenv-action@v0.2.7 
        with:
          path: IMAGE_NAME
      - name: Login to ${{ steps.image_name.outputs.registry }}
        uses: docker/login-action@v1
        with:
          registry: ${{ steps.image_name.outputs.registry }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ steps.image_name.outputs.registry }}/${{ steps.image_name.outputs.repository }}
          github-token: ${{ github.token }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Test
        run: >-
          docker run --rm
          -v `pwd`/test_notebooks:/test_notebooks
          --user $(id -u):$(id -g) -e HOME=/tmp
          ${{ env.TEST_TAG }}
          jupyter nbconvert --to html --execute $NOTEBOOKS --output-dir=/test_notebooks/out
        env:
          # Need fix: cadquery.ipynb
          NOTEBOOKS: >-
            /test_notebooks/import-all.ipynb
            /test_notebooks/ipygany.ipynb
            /test_notebooks/ipyvtk-simple.ipynb
            /test_notebooks/panel.ipynb
      - name: Save notebook HTML out
        uses: actions/upload-artifact@v2
        with:
          name: test-notebooks-html-out
          path: test_notebooks/out/*.html
      - name: Push the image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name == 'push' && contains(github.ref, '/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
