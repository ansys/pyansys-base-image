name: ci

on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'
    branches:
      - main
  pull_request:

env:
  TEST_TAG: pyansys-base-image:test
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Access with ${{ steps.get_workflow_token.outputs.token }}
      - name: Get Bot Application Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.BOT_APPLICATION_PRIVATE_KEY }}
          permissions: "packages:write"

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ steps.get_workflow_token.outputs.token }}
          
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          github-token: ${{ steps.get_workflow_token.outputs.token }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=semver,pattern=v{{major}}.{{minor}}
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=registry,ref=${{ steps.image_name.outputs.registry }}/${{ steps.image_name.outputs.repository }}:latest
          
      - name: Test
        run: >-
          docker run --rm
          -v `pwd`/test_notebooks:/test_notebooks
          --user $(id -u):$(id -g) -e HOME=/tmp
          ${{ env.TEST_TAG }}
          jupyter nbconvert --to html --execute /test_notebooks/* --output-dir=/test_notebooks/out
            
      - name: Save notebook HTML out
        uses: actions/upload-artifact@v2
        with:
          name: test-notebooks-html-out
          path: test_notebooks/out/*.html
          
      - name: Push the image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name == 'push' && contains(github.ref, '/tags/v') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.image_name.outputs.registry }}/${{ steps.image_name.outputs.repository }}:latest
          cache-to: type=inline
          secrets: |
            "github_token=${{ steps.get_workflow_token.outputs.token }}"
